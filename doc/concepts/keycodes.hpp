#pragma once

#include <cstdint>

namespace ny
{

//Modeled using http://www.usb.org/developers/hidpage and linux/input.h
//
//Note that the keycodes therefore directly match with the linux keycodes defined
//in linux/input.h. They are also similiarly named.
//Keys which names cannot be used as enum name are usually changed a bit.
//If there is no possiblity to change the name (like e.g. for number keys 0-9) they
//have a k (like key) prefix.

//Note that e.g. Keycode::a should never be treated as if the user pressed a keyboard
//button labeled 'A'. The keycodes are only a platform and device independent way of
//representing hardware keys that could be located on a standard us keyboard.
//For keyboards with other character sets (like e.g. japanese or russian keyboards)
//Keycode::a will be generated when the key that is at the location where the 'A' key
//would be on an us keyboard. But that does neither mean that the key that was pressed
//is labeled 'A' nor that the user does now expect to e.g. see an 'A' on screen.
//One should not try to e.g. give keycodes names and represent them to the user
//in any way e.g. as application controls (which seems to make sense first, but
//users may not have any idea how to press the 'W' key for moving forward
//when they have a japanese keyboard).

//Keycodes are therefore pretty useless, they just offer a way represent certain
//hardware key locations as plain numbers. Keycodes can be used to determine the actual
//key the user expects the application to deal with using a keyboard layout and a keyboard
//state. These 'actual keys' are named keysyms are ny represents them using either a
//unicode value or a value of the Key enumeration.
enum class Keycode : std::uint32_t
{
	reserved = 0,
	esc,

	k1,
	k2,
	k3,
	k4,
	k5,
	k6,
	k7,
	k8,
	k9,
	k0,
	minus,
	equal,
	backspace,
	tab,

	q,
	w,
	e,
	r,
	t,
	y,
	u,
	i,
	o,
	p,
	leftbrace,
	righbrace,
	enter,
	leftctrl,

	a,
	s,
	d,
	f,
	g,
	h,
	j,
	k,
	l,
	semicolon,
	aporstrophe,
	grave,
	leftshift,
	backslash,

	z,
	x,
	c,
	v,
	b,
	n,
	m,
	comma,
	dot,
	slash,
	rightshift,
	kpasterisk,
	leftalt,
	space,
	capslock,

	f1,
	f2,
	f3,
	f4,
	f5,
	f6,
	f7,
	f8,
	f9,
	f10,

	numlock,
	scrollock,
	kp7,
	kp8,
	kp9,
	kpminus,
	kp4,
	kp5,
	kp6,
	kpplus,
	kp1,
	kp2,
	kp3,
	kp0,
	kpdot,

	hankaku = 85,
	nd102,
	f11,
	f12,
	ro,
	katakana,
	hiragana,
	henkan,
	katakanahiragana,
	muhenkan,
	kpjpcomma,
	kpenter,
	rightctrl,
	kpslash,
	sysrq,
	rightalt,
	linefeed,
	home,
	up,
	pageup,
	left,
	right,
	end,
	down,
	pagedown,
	insert,
	del,
	macro,
	mute,
	volumedown,
	volumeup,
	power,
	kpequal,
	kpplusminus,
	pause,
	scale,
	kpcomma,
	hangeul,
	hanguel = hangeul,
	hanja,
	yen,
	leftmeta,
	rightmeta,
	compose,
	stop,
	again,
	props,
	undo,
	front,
	copy,
	open,
	paste,
	find,
	cut,
	help,
	menu,
	calc,
	setup,
	sleep,
	wakeup,
	file,
	sendfile,
	deletefile,
	xfer,
	prog1,
	prog2,
	www,
	msdos,
	coffee,
	screenlock = coffee,
	rotate_display,
	diretion = rotate_display,
	cyclewindows,
	mail,
	bookmarks,
	computer,
	back,
	forward,
	closecd,
	ejectcd,
	ejectclosecd,
	nextsong,
	playpause,
	previoussong,
	stopcd,
	record,
	rewind,
	phone,
	iso,
	config,
	homepage,
	refresh,
	exit,
	move,
	edit,
	scrollup,
	scrolldown,
	kpleftparen,
	kprightparen,
	knew,
	redo,
	f13,
	f14,
	f15,
	f16,
	f17,
	f18,
	f19,
	f20,
	f21,
	f22,
	f23,
	f24,

	playcd = 200,
	pausecd,
	prog3,
	prog4,
	dashboard,
	suspend,
	close,
	play,
	fastforward,
	bassboost,
	print,
	hp,
	camera,
	sound,
	question,
	email,
	chat,
	search,
	connect,
	finance,
	sport,
	shop,
	alterase,
	cancel,
	brightnessdown,
	brightnessup,
	media,
	switchvideomode,
	kbdillumtoggle,
	kbdillumdown,
	kbdillumup,
	send,
	reply,
	forwardmail,
	save,
	documents,
	battery,
	bluetooh,
	wlan,
	uwb,
	unkown,
	video_next,
	video_prev,
	brightness_cycle,
	brightness_auto,
	brightness_zero = brightness_auto,
	display_off,
	wwan,
	wimax = wwan,
	rfkill,
	micmute,

	ok = 352,
	select,
	kgoto,
	clear,
	power2,
	option,
	info,
	time,
	vendor,
	archive,
	program,
	channel,
	favorites,
	epg,
	pvr,
	mhp,
	language,
	title,
	subtitle,
	angle,
	zoom,
	mode,
	keyboard,
	screen,
	pc,
	tv,
	tv2,
	vcr,
	vcr2,
	sat,
	sat2,
	cd,
	tape,
	radio,
	tuner,
	player,
	text,
	dvd,
	aux,
	mp3,
	audio,
	video,
	directory,
	list,
	memo,
	calendar,
	red,
	green,
	yellow,
	blue,
	channelup,
	channeldown,
	first,
	last,
	ab,
	next,
	restart,
	slow,
	shuffle,
	kbreak,
	previous,
	digits,
	teen,
	twen,
	videophone,
	games,
	zoomin,
	zoomout,
	zoomreset,
	wordprocessor,
	editor,
	spreadsheet,
	graphicseditor,
	presentation,
	database,
	news,
	voicemail,
	addressbook,
	messenger,
	displaytoggle,
	brightness_toggle = displaytoggle,
	spellcheck,
	logoff,

	dollar,
	euro,

	frameback,
	frameforward,
	context_menu,
	media_repeat,
	channelsup10,
	channelsdown10,
	images,

	del_eol = 0x1c0,
	del_eos,
	ins_line,
	del_line,

	fn = 0x1d0,
	fn_esc,
	fn_f1,
	fn_f2,
	fn_f3,
	fn_f4,
	fn_f5,
	fn_f6,
	fn_f7,
	fn_f8,
	fn_f9,
	fn_f10,
	fn_f11,
	fn_f12,
	fn_1,
	fn_2,
	fn_d,
	fn_e,
	fn_f,
	fn_s,
	fn_b,

	brl_dot1 = 0x1f1, 
	brl_dot2,
	brl_dot3,
	brl_dot4,
	brl_dot5,
	brl_dot6,
	brl_dot7,
	brl_dot8,
	brl_dot9,
	brl_dot10,

	numeric_0 = 0x200,
	numeric_1,
	numeric_2,
	numeric_3,
	numeric_4,
	numeric_5,
	numeric_6,
	numeric_7,
	numeric_8,
	numeric_9,
	numeric_star,
	numeric_pound,
	numeric_a,
	numeric_b,
	numeric_c,
	numeric_d,

	camera_focus,
	wps_button,

	touchpad_toggle,
	touchpad_on,
	touchpad_off,

	camera_zoomin,
	camera_zoomout,
	camera_up,
	camera_down,
	camera_left,
	camera_right,

	attendant_on,
	attendant_off,
	attendant_toggle,
	lights_toggle,

	als_toggle = 0x230,

	buttonconfig = 0x240,
	taskmanager,
	journal,
	controlpanel,
	appselect,
	screensaver,
	voicecommand,

	brightness_min = 0x250,
	brightness_max,

	kbdinputassist_prev = 0x260,
	kbdinputassist_next,
	kbdinputassist_prevgroup,
	kbdinputassist_nextgroup,
	kbdinputassist_accept,
	kbdinputassist_cancel,

	right_up,
	right_down,
	left_up,
	left_down,

	root_menu,
	media_top_menu,
	numeric_11,
	numeric_12,

	audio_desc,
	mode3d,
	next_favorite,
	stop_record,
	pause_record,
	vod,
	unmute,
	fastreverse,
	slowreverse,

	data = fastreverse,
};

static_assert(static_cast<unsigned int>(Keycode::micmute) == 248, "Wrong enum numbering!");
static_assert(static_cast<unsigned int>(Keycode::data) == 0x275, "Wrong enum numbering!");

}
